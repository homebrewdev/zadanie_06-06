//
//  main.swift
//  inout
//
//  Created by tiger on 04.06.2019.
//  Copyright © 2019 homework. All rights reserved.
//

import Foundation

// сортировка массивов
// метод sorted() возвращает новый отсортированный массив, никак не изменяя старый:
var numbers: [Int] = [15, 5, 12, 3, 1, 6, 8]

var nums = numbers.sorted()
print(nums)     // [1, 3, 5, 6, 8, 12, 15]

//Обе функции принимают параметр by, который задает принцип сортировки. Он представляет функцию, которая принимает два параметра. Оба параметра представляют тип элементов массива. На выходе функция возвращает объект Bool. Если это значение равно true, то первое значение ставится до второго, если false - то после.
var numsSort = numbers.sorted { ($0 > $1) }
//Выражение {$0 > $1} представляет анонимную функцию, которая возвращает true, если значение первого параметра меньше второго, то есть в данном случае сортировка в обратном порядке.
print(numsSort)     // [15, 12, 8, 6, 5, 3, 1]

var numsSortedUp = numbers.sorted(by: <)
var numsSortedDown = numbers.sorted(by: >)
print(numsSortedUp)     // [1, 3, 5, 6, 8, 12, 15]
print(numsSortedDown)   // [15, 12, 8, 6, 5, 3, 1]

// метод reverse() меняет элементы массива местами (инвертирует по индексу)
numbers.reverse()
print(numbers)       // [8, 6, 1, 3, 12, 5, 15]

// метод shuffle() перемешивает в случ порядке элементы массива
numbers.shuffle()
print(numbers)

// метод swapAt(Int, Int) меняет местами элементы массива по индексам Int
numbers.swapAt(2, 4)  // поменяем местами 3ий(индекс = 2) и 5ый (индекс = 4) элементы массива
print(numbers)

// работа с множествами
// множества Set
// например создать пустое множество
var mySet = Set<Int>()

// Вы так же можете инициализировать множество при помощи литерала массива, чтобы использовать его в качестве сокращенной записи нескольких элементов в качестве коллекции множества.
var favoriteGenres: Set<String> = ["Rock", "House", "Hip hop", "Trance"]

// Получить доступ и модифицировать множества можно через свойства и методы.
// Для того, чтобы выяснить количество элементов в множестве вам нужно использовать свойство count:
print("Число жанров = \(favoriteGenres.count)")

func printAllGenres() {
    for genre in favoriteGenres {
        print("Жанр: \(genre)")
    }
}

//Вы можете добавить новый элемент во множество, используя метод insert(_:)
favoriteGenres.insert("Classic")
printAllGenres()    // проверим что новый жанр Classic добавился в конец множества

//Вы так же можете удалить элемент из множества, используя метод remove(_:), который удаляет элемент члена множества и возвращает удаленное значение или nil, если удаляемого элемента нет. Так же все объекты множества могут быть удалены единовременно при помощи метода removeAll().

favoriteGenres.remove("Hip hop")    // удаляем Hip hop
print("Genre Hip hop is removed!")
printAllGenres()



let glas: Array<Character> = ["а", "о", "у", "е", "ы", "и", "э", "ю", "я"]

let str: String = "Начальная строка"

